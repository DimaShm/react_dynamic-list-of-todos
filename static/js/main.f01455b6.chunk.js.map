{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","filter","setFilter","query","setQuery","applyQuery","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","useState","selectedUser","setSelectedUser","todoModalVisible","setTodoModalVisible","useEffect","userId","user","href","email","name","App","setTodos","isShuffled","setShuffled","appliedQuery","setAppliedQuery","useCallback","f","timerId","clearTimeout","args","window","debounce","response","arrangeTodo","arrangedTodo","filterTodos","toLowerCase","includes","q","shuffledTodo","j","temp","i","length","Math","floor","random","shuffleTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f01455b6.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[] | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, setSelectedTodo }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos?.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n                && (\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={!todo.completed ? 'has-text-danger' : ''}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  filter: string,\n  setFilter: (filter: string) => void,\n  query: string,\n  setQuery: (query: string) => void,\n  applyQuery: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  setFilter,\n  query,\n  setQuery,\n  applyQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(e) => {\n              setFilter(e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => {\n            setQuery(e.target.value);\n            applyQuery(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query\n            && (\n              /* eslint-disable */\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setQuery('');\n                  applyQuery('');\n                }}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  setSelectedTodo: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [todoModalVisible, setTodoModalVisible] = useState(true);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then(user => setSelectedUser(user));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      { todoModalVisible && <div className=\"modal-background\" />}\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        todoModalVisible && (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  setTodoModalVisible(false);\n                  setSelectedTodo();\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={selectedUser.email}>\n                  {selectedUser.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nconst debounce = (f: (query: string) => void, delay: number) => {\n  let timerId: number;\n\n  return (...args: string[]) => {\n    clearTimeout(timerId);\n\n    timerId = window.setTimeout(f, delay, ...args);\n  };\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n  const [isShuffled, setShuffled] = useState(false);\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 1000), [],\n  );\n\n  useEffect(() => {\n    getTodos().then(response => setTodos(response));\n  }, []);\n\n  const filterTodos = () => {\n    if (todos) {\n      switch (filter) {\n        case 'all':\n          break;\n\n        case 'active':\n          return todos.filter(todo => todo.completed === false);\n\n        case 'completed':\n          return todos.filter(todo => todo.completed === true);\n\n        default:\n          break;\n      }\n    }\n\n    return todos;\n  };\n\n  const arrangeTodo = () => {\n    const arrangedTodo = filterTodos();\n\n    if (arrangedTodo) {\n      return arrangedTodo.filter(todo => todo.title.toLowerCase().includes(appliedQuery.toLowerCase()));\n    }\n\n    return arrangedTodo;\n  };\n\n  function shuffleTodo() {\n    const shuffledTodo = arrangeTodo();\n\n    if (shuffledTodo) {\n      let j; let\n        temp;\n\n      for (let i = shuffledTodo.length - 1; i > 0; i -= 1) {\n        j = Math.floor(Math.random() * (i + 1));\n        temp = shuffledTodo[j];\n        shuffledTodo[j] = shuffledTodo[i];\n        shuffledTodo[i] = temp;\n      }\n    }\n\n    return shuffledTodo;\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <button\n              type=\"button\"\n              className=\"button is-warning subtitle\"\n              onClick={() => setShuffled(!isShuffled)}\n            >\n              Randomize\n            </button>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                setFilter={setFilter}\n                query={query}\n                setQuery={(q) => {\n                  setQuery(q);\n                }}\n                applyQuery={applyQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos && <Loader />}\n\n              <TodoList\n                todos={\n                  isShuffled\n                    ? shuffleTodo()\n                    : arrangeTodo()\n                }\n                setSelectedTodo={setSelectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo\n        && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            setSelectedTodo={() => setSelectedTodo(null)}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}